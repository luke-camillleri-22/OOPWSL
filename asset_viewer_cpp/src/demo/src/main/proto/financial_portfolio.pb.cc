// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo/src/main/proto/financial_portfolio.proto

#include "/mnt/c/Users/Owner/OOP/asset_viewer_cpp/src/demo/src/main/proto/financial_portfolio.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Asset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Bond_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MutualFund_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Snapshot_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Stock_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto;
namespace com {
namespace example {
class Asset_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Asset_Proto> _instance;
  const ::com::example::Stock_Proto* stock_;
  const ::com::example::Bond_Proto* bond_;
  const ::com::example::MutualFund_Proto* mutualfund_;
} _Asset_Proto_default_instance_;
class BaseAsset_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BaseAsset_Proto> _instance;
} _BaseAsset_Proto_default_instance_;
class Stock_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Stock_Proto> _instance;
} _Stock_Proto_default_instance_;
class Bond_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Bond_Proto> _instance;
} _Bond_Proto_default_instance_;
class MutualFund_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MutualFund_Proto> _instance;
} _MutualFund_Proto_default_instance_;
class Intermediary_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Intermediary_Proto> _instance;
  const ::com::example::Broker_Proto* broker_;
  const ::com::example::Bank_Proto* bank_;
  const ::com::example::MutualFundManager_Proto* mutualfundmanager_;
} _Intermediary_Proto_default_instance_;
class Broker_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Broker_Proto> _instance;
} _Broker_Proto_default_instance_;
class Bank_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Bank_Proto> _instance;
} _Bank_Proto_default_instance_;
class MutualFundManager_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MutualFundManager_Proto> _instance;
} _MutualFundManager_Proto_default_instance_;
class Snapshot_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Snapshot_Proto> _instance;
} _Snapshot_Proto_default_instance_;
class Portfolio_ProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Portfolio_Proto> _instance;
} _Portfolio_Proto_default_instance_;
}  // namespace example
}  // namespace com
static void InitDefaultsscc_info_Asset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::_Asset_Proto_default_instance_;
    new (ptr) ::com::example::Asset_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::Asset_Proto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Asset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Asset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto}, {
      &scc_info_Stock_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
      &scc_info_Bond_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
      &scc_info_MutualFund_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,}};

static void InitDefaultsscc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::_Intermediary_Proto_default_instance_;
    new (ptr) ::com::example::Intermediary_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::example::_Broker_Proto_default_instance_;
    new (ptr) ::com::example::Broker_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::example::_Bank_Proto_default_instance_;
    new (ptr) ::com::example::Bank_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::example::_MutualFundManager_Proto_default_instance_;
    new (ptr) ::com::example::MutualFundManager_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::Intermediary_Proto::InitAsDefaultInstance();
  ::com::example::Broker_Proto::InitAsDefaultInstance();
  ::com::example::Bank_Proto::InitAsDefaultInstance();
  ::com::example::MutualFundManager_Proto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto}, {}};

static void InitDefaultsscc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::_BaseAsset_Proto_default_instance_;
    new (ptr) ::com::example::BaseAsset_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::BaseAsset_Proto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto}, {}};

static void InitDefaultsscc_info_Bond_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::_Bond_Proto_default_instance_;
    new (ptr) ::com::example::Bond_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::Bond_Proto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Bond_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Bond_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto}, {
      &scc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,}};

static void InitDefaultsscc_info_MutualFund_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::_MutualFund_Proto_default_instance_;
    new (ptr) ::com::example::MutualFund_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::MutualFund_Proto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MutualFund_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MutualFund_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto}, {
      &scc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,}};

static void InitDefaultsscc_info_Portfolio_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::_Portfolio_Proto_default_instance_;
    new (ptr) ::com::example::Portfolio_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::Portfolio_Proto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Portfolio_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Portfolio_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto}, {
      &scc_info_Asset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
      &scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
      &scc_info_Snapshot_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,}};

static void InitDefaultsscc_info_Snapshot_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::_Snapshot_Proto_default_instance_;
    new (ptr) ::com::example::Snapshot_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::Snapshot_Proto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Snapshot_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Snapshot_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto}, {}};

static void InitDefaultsscc_info_Stock_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::_Stock_Proto_default_instance_;
    new (ptr) ::com::example::Stock_Proto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::Stock_Proto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Stock_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Stock_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto}, {
      &scc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::Asset_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::example::Asset_Proto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::Asset_Proto, type_),
  offsetof(::com::example::Asset_ProtoDefaultTypeInternal, stock_),
  offsetof(::com::example::Asset_ProtoDefaultTypeInternal, bond_),
  offsetof(::com::example::Asset_ProtoDefaultTypeInternal, mutualfund_),
  PROTOBUF_FIELD_OFFSET(::com::example::Asset_Proto, asset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::BaseAsset_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::BaseAsset_Proto, name_),
  PROTOBUF_FIELD_OFFSET(::com::example::BaseAsset_Proto, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::Stock_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::Stock_Proto, baseasset_),
  PROTOBUF_FIELD_OFFSET(::com::example::Stock_Proto, ticker_),
  PROTOBUF_FIELD_OFFSET(::com::example::Stock_Proto, shares_),
  PROTOBUF_FIELD_OFFSET(::com::example::Stock_Proto, dividendyield_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::Bond_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::Bond_Proto, baseasset_),
  PROTOBUF_FIELD_OFFSET(::com::example::Bond_Proto, interestrate_),
  PROTOBUF_FIELD_OFFSET(::com::example::Bond_Proto, maturitydate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::MutualFund_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::MutualFund_Proto, baseasset_),
  PROTOBUF_FIELD_OFFSET(::com::example::MutualFund_Proto, expenseratio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::Intermediary_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::example::Intermediary_Proto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::Intermediary_Proto, type_),
  PROTOBUF_FIELD_OFFSET(::com::example::Intermediary_Proto, name_),
  offsetof(::com::example::Intermediary_ProtoDefaultTypeInternal, broker_),
  offsetof(::com::example::Intermediary_ProtoDefaultTypeInternal, bank_),
  offsetof(::com::example::Intermediary_ProtoDefaultTypeInternal, mutualfundmanager_),
  PROTOBUF_FIELD_OFFSET(::com::example::Intermediary_Proto, intermediary_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::Broker_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::Broker_Proto, intermediary_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::Bank_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::Bank_Proto, intermediary_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::MutualFundManager_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::MutualFundManager_Proto, intermediary_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::Snapshot_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::Snapshot_Proto, assetname_),
  PROTOBUF_FIELD_OFFSET(::com::example::Snapshot_Proto, assetvalue_),
  PROTOBUF_FIELD_OFFSET(::com::example::Snapshot_Proto, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::example::Portfolio_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::example::Portfolio_Proto, assets_),
  PROTOBUF_FIELD_OFFSET(::com::example::Portfolio_Proto, intermediaries_),
  PROTOBUF_FIELD_OFFSET(::com::example::Portfolio_Proto, snapshots_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::example::Asset_Proto)},
  { 10, -1, sizeof(::com::example::BaseAsset_Proto)},
  { 17, -1, sizeof(::com::example::Stock_Proto)},
  { 26, -1, sizeof(::com::example::Bond_Proto)},
  { 34, -1, sizeof(::com::example::MutualFund_Proto)},
  { 41, -1, sizeof(::com::example::Intermediary_Proto)},
  { 52, -1, sizeof(::com::example::Broker_Proto)},
  { 58, -1, sizeof(::com::example::Bank_Proto)},
  { 64, -1, sizeof(::com::example::MutualFundManager_Proto)},
  { 70, -1, sizeof(::com::example::Snapshot_Proto)},
  { 78, -1, sizeof(::com::example::Portfolio_Proto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_Asset_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_BaseAsset_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_Stock_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_Bond_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_MutualFund_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_Intermediary_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_Broker_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_Bank_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_MutualFundManager_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_Snapshot_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::example::_Portfolio_Proto_default_instance_),
};

const char descriptor_table_protodef_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-demo/src/main/proto/financial_portfoli"
  "o.proto\022\013com.example\"\255\001\n\013Asset_Proto\022\014\n\004"
  "type\030\001 \001(\t\022)\n\005stock\030\002 \001(\0132\030.com.example."
  "Stock_ProtoH\000\022\'\n\004bond\030\003 \001(\0132\027.com.exampl"
  "e.Bond_ProtoH\000\0223\n\nmutualFund\030\004 \001(\0132\035.com"
  ".example.MutualFund_ProtoH\000B\007\n\005asset\".\n\017"
  "BaseAsset_Proto\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002"
  " \001(\002\"u\n\013Stock_Proto\022/\n\tbaseAsset\030\001 \001(\0132\034"
  ".com.example.BaseAsset_Proto\022\016\n\006ticker\030\002"
  " \001(\t\022\016\n\006shares\030\003 \001(\005\022\025\n\rdividendYield\030\004 "
  "\001(\002\"i\n\nBond_Proto\022/\n\tbaseAsset\030\001 \001(\0132\034.c"
  "om.example.BaseAsset_Proto\022\024\n\014interestRa"
  "te\030\002 \001(\002\022\024\n\014maturityDate\030\003 \001(\t\"Y\n\020Mutual"
  "Fund_Proto\022/\n\tbaseAsset\030\001 \001(\0132\034.com.exam"
  "ple.BaseAsset_Proto\022\024\n\014expenseRatio\030\002 \001("
  "\002\"\331\001\n\022Intermediary_Proto\022\014\n\004type\030\001 \001(\t\022\014"
  "\n\004name\030\002 \001(\t\022+\n\006broker\030\003 \001(\0132\031.com.examp"
  "le.Broker_ProtoH\000\022\'\n\004bank\030\004 \001(\0132\027.com.ex"
  "ample.Bank_ProtoH\000\022A\n\021mutualFundManager\030"
  "\005 \001(\0132$.com.example.MutualFundManager_Pr"
  "otoH\000B\016\n\014intermediary\"E\n\014Broker_Proto\0225\n"
  "\014intermediary\030\001 \001(\0132\037.com.example.Interm"
  "ediary_Proto\"C\n\nBank_Proto\0225\n\014intermedia"
  "ry\030\001 \001(\0132\037.com.example.Intermediary_Prot"
  "o\"P\n\027MutualFundManager_Proto\0225\n\014intermed"
  "iary\030\001 \001(\0132\037.com.example.Intermediary_Pr"
  "oto\"J\n\016Snapshot_Proto\022\021\n\tassetName\030\001 \001(\t"
  "\022\022\n\nassetValue\030\002 \001(\002\022\021\n\ttimestamp\030\003 \001(\t\""
  "\244\001\n\017Portfolio_Proto\022(\n\006assets\030\001 \003(\0132\030.co"
  "m.example.Asset_Proto\0227\n\016intermediaries\030"
  "\002 \003(\0132\037.com.example.Intermediary_Proto\022."
  "\n\tsnapshots\030\003 \003(\0132\033.com.example.Snapshot"
  "_Protob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto_sccs[8] = {
  &scc_info_Asset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
  &scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
  &scc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
  &scc_info_Bond_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
  &scc_info_MutualFund_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
  &scc_info_Portfolio_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
  &scc_info_Snapshot_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
  &scc_info_Stock_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto = {
  false, false, descriptor_table_protodef_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto, "demo/src/main/proto/financial_portfolio.proto", 1294,
  &descriptor_table_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto_once, descriptor_table_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto_sccs, descriptor_table_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto_deps, 8, 0,
  schemas, file_default_instances, TableStruct_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto::offsets,
  file_level_metadata_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto, 11, file_level_enum_descriptors_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto, file_level_service_descriptors_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto)), true);
namespace com {
namespace example {

// ===================================================================

void Asset_Proto::InitAsDefaultInstance() {
  ::com::example::_Asset_Proto_default_instance_.stock_ = const_cast< ::com::example::Stock_Proto*>(
      ::com::example::Stock_Proto::internal_default_instance());
  ::com::example::_Asset_Proto_default_instance_.bond_ = const_cast< ::com::example::Bond_Proto*>(
      ::com::example::Bond_Proto::internal_default_instance());
  ::com::example::_Asset_Proto_default_instance_.mutualfund_ = const_cast< ::com::example::MutualFund_Proto*>(
      ::com::example::MutualFund_Proto::internal_default_instance());
}
class Asset_Proto::_Internal {
 public:
  static const ::com::example::Stock_Proto& stock(const Asset_Proto* msg);
  static const ::com::example::Bond_Proto& bond(const Asset_Proto* msg);
  static const ::com::example::MutualFund_Proto& mutualfund(const Asset_Proto* msg);
};

const ::com::example::Stock_Proto&
Asset_Proto::_Internal::stock(const Asset_Proto* msg) {
  return *msg->asset_.stock_;
}
const ::com::example::Bond_Proto&
Asset_Proto::_Internal::bond(const Asset_Proto* msg) {
  return *msg->asset_.bond_;
}
const ::com::example::MutualFund_Proto&
Asset_Proto::_Internal::mutualfund(const Asset_Proto* msg) {
  return *msg->asset_.mutualfund_;
}
void Asset_Proto::set_allocated_stock(::com::example::Stock_Proto* stock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_asset();
  if (stock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stock);
    if (message_arena != submessage_arena) {
      stock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stock, submessage_arena);
    }
    set_has_stock();
    asset_.stock_ = stock;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.Asset_Proto.stock)
}
void Asset_Proto::set_allocated_bond(::com::example::Bond_Proto* bond) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_asset();
  if (bond) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bond);
    if (message_arena != submessage_arena) {
      bond = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bond, submessage_arena);
    }
    set_has_bond();
    asset_.bond_ = bond;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.Asset_Proto.bond)
}
void Asset_Proto::set_allocated_mutualfund(::com::example::MutualFund_Proto* mutualfund) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_asset();
  if (mutualfund) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(mutualfund);
    if (message_arena != submessage_arena) {
      mutualfund = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mutualfund, submessage_arena);
    }
    set_has_mutualfund();
    asset_.mutualfund_ = mutualfund;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.Asset_Proto.mutualFund)
}
Asset_Proto::Asset_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.Asset_Proto)
}
Asset_Proto::Asset_Proto(const Asset_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  clear_has_asset();
  switch (from.asset_case()) {
    case kStock: {
      _internal_mutable_stock()->::com::example::Stock_Proto::MergeFrom(from._internal_stock());
      break;
    }
    case kBond: {
      _internal_mutable_bond()->::com::example::Bond_Proto::MergeFrom(from._internal_bond());
      break;
    }
    case kMutualFund: {
      _internal_mutable_mutualfund()->::com::example::MutualFund_Proto::MergeFrom(from._internal_mutualfund());
      break;
    }
    case ASSET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.example.Asset_Proto)
}

void Asset_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Asset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_asset();
}

Asset_Proto::~Asset_Proto() {
  // @@protoc_insertion_point(destructor:com.example.Asset_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Asset_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_asset()) {
    clear_asset();
  }
}

void Asset_Proto::ArenaDtor(void* object) {
  Asset_Proto* _this = reinterpret_cast< Asset_Proto* >(object);
  (void)_this;
}
void Asset_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Asset_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Asset_Proto& Asset_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Asset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void Asset_Proto::clear_asset() {
// @@protoc_insertion_point(one_of_clear_start:com.example.Asset_Proto)
  switch (asset_case()) {
    case kStock: {
      if (GetArena() == nullptr) {
        delete asset_.stock_;
      }
      break;
    }
    case kBond: {
      if (GetArena() == nullptr) {
        delete asset_.bond_;
      }
      break;
    }
    case kMutualFund: {
      if (GetArena() == nullptr) {
        delete asset_.mutualfund_;
      }
      break;
    }
    case ASSET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ASSET_NOT_SET;
}


void Asset_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.Asset_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_asset();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Asset_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.example.Asset_Proto.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.example.Stock_Proto stock = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_stock(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.example.Bond_Proto bond = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_bond(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.example.MutualFund_Proto mutualFund = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_mutualfund(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Asset_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.Asset_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.example.Asset_Proto.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // .com.example.Stock_Proto stock = 2;
  if (_internal_has_stock()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::stock(this), target, stream);
  }

  // .com.example.Bond_Proto bond = 3;
  if (_internal_has_bond()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::bond(this), target, stream);
  }

  // .com.example.MutualFund_Proto mutualFund = 4;
  if (_internal_has_mutualfund()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::mutualfund(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.Asset_Proto)
  return target;
}

size_t Asset_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.Asset_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  switch (asset_case()) {
    // .com.example.Stock_Proto stock = 2;
    case kStock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *asset_.stock_);
      break;
    }
    // .com.example.Bond_Proto bond = 3;
    case kBond: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *asset_.bond_);
      break;
    }
    // .com.example.MutualFund_Proto mutualFund = 4;
    case kMutualFund: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *asset_.mutualfund_);
      break;
    }
    case ASSET_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Asset_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.Asset_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Asset_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Asset_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.Asset_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.Asset_Proto)
    MergeFrom(*source);
  }
}

void Asset_Proto::MergeFrom(const Asset_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.Asset_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  switch (from.asset_case()) {
    case kStock: {
      _internal_mutable_stock()->::com::example::Stock_Proto::MergeFrom(from._internal_stock());
      break;
    }
    case kBond: {
      _internal_mutable_bond()->::com::example::Bond_Proto::MergeFrom(from._internal_bond());
      break;
    }
    case kMutualFund: {
      _internal_mutable_mutualfund()->::com::example::MutualFund_Proto::MergeFrom(from._internal_mutualfund());
      break;
    }
    case ASSET_NOT_SET: {
      break;
    }
  }
}

void Asset_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.Asset_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Asset_Proto::CopyFrom(const Asset_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.Asset_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Asset_Proto::IsInitialized() const {
  return true;
}

void Asset_Proto::InternalSwap(Asset_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(asset_, other->asset_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Asset_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BaseAsset_Proto::InitAsDefaultInstance() {
}
class BaseAsset_Proto::_Internal {
 public:
};

BaseAsset_Proto::BaseAsset_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.BaseAsset_Proto)
}
BaseAsset_Proto::BaseAsset_Proto(const BaseAsset_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:com.example.BaseAsset_Proto)
}

void BaseAsset_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

BaseAsset_Proto::~BaseAsset_Proto() {
  // @@protoc_insertion_point(destructor:com.example.BaseAsset_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BaseAsset_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BaseAsset_Proto::ArenaDtor(void* object) {
  BaseAsset_Proto* _this = reinterpret_cast< BaseAsset_Proto* >(object);
  (void)_this;
}
void BaseAsset_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BaseAsset_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BaseAsset_Proto& BaseAsset_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BaseAsset_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void BaseAsset_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.BaseAsset_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseAsset_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.example.BaseAsset_Proto.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BaseAsset_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.BaseAsset_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.example.BaseAsset_Proto.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // float value = 2;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.BaseAsset_Proto)
  return target;
}

size_t BaseAsset_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.BaseAsset_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // float value = 2;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BaseAsset_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.BaseAsset_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAsset_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BaseAsset_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.BaseAsset_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.BaseAsset_Proto)
    MergeFrom(*source);
  }
}

void BaseAsset_Proto::MergeFrom(const BaseAsset_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.BaseAsset_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (!(from.value() <= 0 && from.value() >= 0)) {
    _internal_set_value(from._internal_value());
  }
}

void BaseAsset_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.BaseAsset_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAsset_Proto::CopyFrom(const BaseAsset_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.BaseAsset_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAsset_Proto::IsInitialized() const {
  return true;
}

void BaseAsset_Proto::InternalSwap(BaseAsset_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseAsset_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Stock_Proto::InitAsDefaultInstance() {
  ::com::example::_Stock_Proto_default_instance_._instance.get_mutable()->baseasset_ = const_cast< ::com::example::BaseAsset_Proto*>(
      ::com::example::BaseAsset_Proto::internal_default_instance());
}
class Stock_Proto::_Internal {
 public:
  static const ::com::example::BaseAsset_Proto& baseasset(const Stock_Proto* msg);
};

const ::com::example::BaseAsset_Proto&
Stock_Proto::_Internal::baseasset(const Stock_Proto* msg) {
  return *msg->baseasset_;
}
Stock_Proto::Stock_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.Stock_Proto)
}
Stock_Proto::Stock_Proto(const Stock_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ticker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ticker().empty()) {
    ticker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ticker(),
      GetArena());
  }
  if (from._internal_has_baseasset()) {
    baseasset_ = new ::com::example::BaseAsset_Proto(*from.baseasset_);
  } else {
    baseasset_ = nullptr;
  }
  ::memcpy(&shares_, &from.shares_,
    static_cast<size_t>(reinterpret_cast<char*>(&dividendyield_) -
    reinterpret_cast<char*>(&shares_)) + sizeof(dividendyield_));
  // @@protoc_insertion_point(copy_constructor:com.example.Stock_Proto)
}

void Stock_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Stock_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  ticker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseasset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dividendyield_) -
      reinterpret_cast<char*>(&baseasset_)) + sizeof(dividendyield_));
}

Stock_Proto::~Stock_Proto() {
  // @@protoc_insertion_point(destructor:com.example.Stock_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Stock_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ticker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseasset_;
}

void Stock_Proto::ArenaDtor(void* object) {
  Stock_Proto* _this = reinterpret_cast< Stock_Proto* >(object);
  (void)_this;
}
void Stock_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Stock_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Stock_Proto& Stock_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Stock_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void Stock_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.Stock_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticker_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && baseasset_ != nullptr) {
    delete baseasset_;
  }
  baseasset_ = nullptr;
  ::memset(&shares_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dividendyield_) -
      reinterpret_cast<char*>(&shares_)) + sizeof(dividendyield_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Stock_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.example.BaseAsset_Proto baseAsset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_baseasset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ticker = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_ticker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.example.Stock_Proto.ticker"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 shares = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          shares_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float dividendYield = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          dividendyield_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Stock_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.Stock_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.example.BaseAsset_Proto baseAsset = 1;
  if (this->has_baseasset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::baseasset(this), target, stream);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ticker().data(), static_cast<int>(this->_internal_ticker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.example.Stock_Proto.ticker");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ticker(), target);
  }

  // int32 shares = 3;
  if (this->shares() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_shares(), target);
  }

  // float dividendYield = 4;
  if (!(this->dividendyield() <= 0 && this->dividendyield() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_dividendyield(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.Stock_Proto)
  return target;
}

size_t Stock_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.Stock_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ticker());
  }

  // .com.example.BaseAsset_Proto baseAsset = 1;
  if (this->has_baseasset()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *baseasset_);
  }

  // int32 shares = 3;
  if (this->shares() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shares());
  }

  // float dividendYield = 4;
  if (!(this->dividendyield() <= 0 && this->dividendyield() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stock_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.Stock_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Stock_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Stock_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.Stock_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.Stock_Proto)
    MergeFrom(*source);
  }
}

void Stock_Proto::MergeFrom(const Stock_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.Stock_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticker().size() > 0) {
    _internal_set_ticker(from._internal_ticker());
  }
  if (from.has_baseasset()) {
    _internal_mutable_baseasset()->::com::example::BaseAsset_Proto::MergeFrom(from._internal_baseasset());
  }
  if (from.shares() != 0) {
    _internal_set_shares(from._internal_shares());
  }
  if (!(from.dividendyield() <= 0 && from.dividendyield() >= 0)) {
    _internal_set_dividendyield(from._internal_dividendyield());
  }
}

void Stock_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.Stock_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stock_Proto::CopyFrom(const Stock_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.Stock_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stock_Proto::IsInitialized() const {
  return true;
}

void Stock_Proto::InternalSwap(Stock_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ticker_.Swap(&other->ticker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Stock_Proto, dividendyield_)
      + sizeof(Stock_Proto::dividendyield_)
      - PROTOBUF_FIELD_OFFSET(Stock_Proto, baseasset_)>(
          reinterpret_cast<char*>(&baseasset_),
          reinterpret_cast<char*>(&other->baseasset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Stock_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Bond_Proto::InitAsDefaultInstance() {
  ::com::example::_Bond_Proto_default_instance_._instance.get_mutable()->baseasset_ = const_cast< ::com::example::BaseAsset_Proto*>(
      ::com::example::BaseAsset_Proto::internal_default_instance());
}
class Bond_Proto::_Internal {
 public:
  static const ::com::example::BaseAsset_Proto& baseasset(const Bond_Proto* msg);
};

const ::com::example::BaseAsset_Proto&
Bond_Proto::_Internal::baseasset(const Bond_Proto* msg) {
  return *msg->baseasset_;
}
Bond_Proto::Bond_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.Bond_Proto)
}
Bond_Proto::Bond_Proto(const Bond_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  maturitydate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_maturitydate().empty()) {
    maturitydate_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_maturitydate(),
      GetArena());
  }
  if (from._internal_has_baseasset()) {
    baseasset_ = new ::com::example::BaseAsset_Proto(*from.baseasset_);
  } else {
    baseasset_ = nullptr;
  }
  interestrate_ = from.interestrate_;
  // @@protoc_insertion_point(copy_constructor:com.example.Bond_Proto)
}

void Bond_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Bond_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  maturitydate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseasset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interestrate_) -
      reinterpret_cast<char*>(&baseasset_)) + sizeof(interestrate_));
}

Bond_Proto::~Bond_Proto() {
  // @@protoc_insertion_point(destructor:com.example.Bond_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Bond_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  maturitydate_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseasset_;
}

void Bond_Proto::ArenaDtor(void* object) {
  Bond_Proto* _this = reinterpret_cast< Bond_Proto* >(object);
  (void)_this;
}
void Bond_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Bond_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Bond_Proto& Bond_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Bond_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void Bond_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.Bond_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maturitydate_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && baseasset_ != nullptr) {
    delete baseasset_;
  }
  baseasset_ = nullptr;
  interestrate_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Bond_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.example.BaseAsset_Proto baseAsset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_baseasset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float interestRate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          interestrate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string maturityDate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_maturitydate();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.example.Bond_Proto.maturityDate"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Bond_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.Bond_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.example.BaseAsset_Proto baseAsset = 1;
  if (this->has_baseasset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::baseasset(this), target, stream);
  }

  // float interestRate = 2;
  if (!(this->interestrate() <= 0 && this->interestrate() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_interestrate(), target);
  }

  // string maturityDate = 3;
  if (this->maturitydate().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_maturitydate().data(), static_cast<int>(this->_internal_maturitydate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.example.Bond_Proto.maturityDate");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_maturitydate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.Bond_Proto)
  return target;
}

size_t Bond_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.Bond_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string maturityDate = 3;
  if (this->maturitydate().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_maturitydate());
  }

  // .com.example.BaseAsset_Proto baseAsset = 1;
  if (this->has_baseasset()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *baseasset_);
  }

  // float interestRate = 2;
  if (!(this->interestrate() <= 0 && this->interestrate() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bond_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.Bond_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Bond_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Bond_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.Bond_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.Bond_Proto)
    MergeFrom(*source);
  }
}

void Bond_Proto::MergeFrom(const Bond_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.Bond_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maturitydate().size() > 0) {
    _internal_set_maturitydate(from._internal_maturitydate());
  }
  if (from.has_baseasset()) {
    _internal_mutable_baseasset()->::com::example::BaseAsset_Proto::MergeFrom(from._internal_baseasset());
  }
  if (!(from.interestrate() <= 0 && from.interestrate() >= 0)) {
    _internal_set_interestrate(from._internal_interestrate());
  }
}

void Bond_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.Bond_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bond_Proto::CopyFrom(const Bond_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.Bond_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bond_Proto::IsInitialized() const {
  return true;
}

void Bond_Proto::InternalSwap(Bond_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  maturitydate_.Swap(&other->maturitydate_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Bond_Proto, interestrate_)
      + sizeof(Bond_Proto::interestrate_)
      - PROTOBUF_FIELD_OFFSET(Bond_Proto, baseasset_)>(
          reinterpret_cast<char*>(&baseasset_),
          reinterpret_cast<char*>(&other->baseasset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Bond_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MutualFund_Proto::InitAsDefaultInstance() {
  ::com::example::_MutualFund_Proto_default_instance_._instance.get_mutable()->baseasset_ = const_cast< ::com::example::BaseAsset_Proto*>(
      ::com::example::BaseAsset_Proto::internal_default_instance());
}
class MutualFund_Proto::_Internal {
 public:
  static const ::com::example::BaseAsset_Proto& baseasset(const MutualFund_Proto* msg);
};

const ::com::example::BaseAsset_Proto&
MutualFund_Proto::_Internal::baseasset(const MutualFund_Proto* msg) {
  return *msg->baseasset_;
}
MutualFund_Proto::MutualFund_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.MutualFund_Proto)
}
MutualFund_Proto::MutualFund_Proto(const MutualFund_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_baseasset()) {
    baseasset_ = new ::com::example::BaseAsset_Proto(*from.baseasset_);
  } else {
    baseasset_ = nullptr;
  }
  expenseratio_ = from.expenseratio_;
  // @@protoc_insertion_point(copy_constructor:com.example.MutualFund_Proto)
}

void MutualFund_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MutualFund_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  ::memset(&baseasset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expenseratio_) -
      reinterpret_cast<char*>(&baseasset_)) + sizeof(expenseratio_));
}

MutualFund_Proto::~MutualFund_Proto() {
  // @@protoc_insertion_point(destructor:com.example.MutualFund_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MutualFund_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete baseasset_;
}

void MutualFund_Proto::ArenaDtor(void* object) {
  MutualFund_Proto* _this = reinterpret_cast< MutualFund_Proto* >(object);
  (void)_this;
}
void MutualFund_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MutualFund_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MutualFund_Proto& MutualFund_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MutualFund_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void MutualFund_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.MutualFund_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && baseasset_ != nullptr) {
    delete baseasset_;
  }
  baseasset_ = nullptr;
  expenseratio_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MutualFund_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.example.BaseAsset_Proto baseAsset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_baseasset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float expenseRatio = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          expenseratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MutualFund_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.MutualFund_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.example.BaseAsset_Proto baseAsset = 1;
  if (this->has_baseasset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::baseasset(this), target, stream);
  }

  // float expenseRatio = 2;
  if (!(this->expenseratio() <= 0 && this->expenseratio() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_expenseratio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.MutualFund_Proto)
  return target;
}

size_t MutualFund_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.MutualFund_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.example.BaseAsset_Proto baseAsset = 1;
  if (this->has_baseasset()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *baseasset_);
  }

  // float expenseRatio = 2;
  if (!(this->expenseratio() <= 0 && this->expenseratio() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MutualFund_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.MutualFund_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const MutualFund_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MutualFund_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.MutualFund_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.MutualFund_Proto)
    MergeFrom(*source);
  }
}

void MutualFund_Proto::MergeFrom(const MutualFund_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.MutualFund_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseasset()) {
    _internal_mutable_baseasset()->::com::example::BaseAsset_Proto::MergeFrom(from._internal_baseasset());
  }
  if (!(from.expenseratio() <= 0 && from.expenseratio() >= 0)) {
    _internal_set_expenseratio(from._internal_expenseratio());
  }
}

void MutualFund_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.MutualFund_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutualFund_Proto::CopyFrom(const MutualFund_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.MutualFund_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutualFund_Proto::IsInitialized() const {
  return true;
}

void MutualFund_Proto::InternalSwap(MutualFund_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MutualFund_Proto, expenseratio_)
      + sizeof(MutualFund_Proto::expenseratio_)
      - PROTOBUF_FIELD_OFFSET(MutualFund_Proto, baseasset_)>(
          reinterpret_cast<char*>(&baseasset_),
          reinterpret_cast<char*>(&other->baseasset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MutualFund_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Intermediary_Proto::InitAsDefaultInstance() {
  ::com::example::_Intermediary_Proto_default_instance_.broker_ = const_cast< ::com::example::Broker_Proto*>(
      ::com::example::Broker_Proto::internal_default_instance());
  ::com::example::_Intermediary_Proto_default_instance_.bank_ = const_cast< ::com::example::Bank_Proto*>(
      ::com::example::Bank_Proto::internal_default_instance());
  ::com::example::_Intermediary_Proto_default_instance_.mutualfundmanager_ = const_cast< ::com::example::MutualFundManager_Proto*>(
      ::com::example::MutualFundManager_Proto::internal_default_instance());
}
class Intermediary_Proto::_Internal {
 public:
  static const ::com::example::Broker_Proto& broker(const Intermediary_Proto* msg);
  static const ::com::example::Bank_Proto& bank(const Intermediary_Proto* msg);
  static const ::com::example::MutualFundManager_Proto& mutualfundmanager(const Intermediary_Proto* msg);
};

const ::com::example::Broker_Proto&
Intermediary_Proto::_Internal::broker(const Intermediary_Proto* msg) {
  return *msg->intermediary_.broker_;
}
const ::com::example::Bank_Proto&
Intermediary_Proto::_Internal::bank(const Intermediary_Proto* msg) {
  return *msg->intermediary_.bank_;
}
const ::com::example::MutualFundManager_Proto&
Intermediary_Proto::_Internal::mutualfundmanager(const Intermediary_Proto* msg) {
  return *msg->intermediary_.mutualfundmanager_;
}
void Intermediary_Proto::set_allocated_broker(::com::example::Broker_Proto* broker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_intermediary();
  if (broker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(broker);
    if (message_arena != submessage_arena) {
      broker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, broker, submessage_arena);
    }
    set_has_broker();
    intermediary_.broker_ = broker;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.Intermediary_Proto.broker)
}
void Intermediary_Proto::set_allocated_bank(::com::example::Bank_Proto* bank) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_intermediary();
  if (bank) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bank);
    if (message_arena != submessage_arena) {
      bank = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bank, submessage_arena);
    }
    set_has_bank();
    intermediary_.bank_ = bank;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.Intermediary_Proto.bank)
}
void Intermediary_Proto::set_allocated_mutualfundmanager(::com::example::MutualFundManager_Proto* mutualfundmanager) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_intermediary();
  if (mutualfundmanager) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(mutualfundmanager);
    if (message_arena != submessage_arena) {
      mutualfundmanager = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mutualfundmanager, submessage_arena);
    }
    set_has_mutualfundmanager();
    intermediary_.mutualfundmanager_ = mutualfundmanager;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.Intermediary_Proto.mutualFundManager)
}
Intermediary_Proto::Intermediary_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.Intermediary_Proto)
}
Intermediary_Proto::Intermediary_Proto(const Intermediary_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  clear_has_intermediary();
  switch (from.intermediary_case()) {
    case kBroker: {
      _internal_mutable_broker()->::com::example::Broker_Proto::MergeFrom(from._internal_broker());
      break;
    }
    case kBank: {
      _internal_mutable_bank()->::com::example::Bank_Proto::MergeFrom(from._internal_bank());
      break;
    }
    case kMutualFundManager: {
      _internal_mutable_mutualfundmanager()->::com::example::MutualFundManager_Proto::MergeFrom(from._internal_mutualfundmanager());
      break;
    }
    case INTERMEDIARY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.example.Intermediary_Proto)
}

void Intermediary_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_intermediary();
}

Intermediary_Proto::~Intermediary_Proto() {
  // @@protoc_insertion_point(destructor:com.example.Intermediary_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Intermediary_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_intermediary()) {
    clear_intermediary();
  }
}

void Intermediary_Proto::ArenaDtor(void* object) {
  Intermediary_Proto* _this = reinterpret_cast< Intermediary_Proto* >(object);
  (void)_this;
}
void Intermediary_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Intermediary_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Intermediary_Proto& Intermediary_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void Intermediary_Proto::clear_intermediary() {
// @@protoc_insertion_point(one_of_clear_start:com.example.Intermediary_Proto)
  switch (intermediary_case()) {
    case kBroker: {
      if (GetArena() == nullptr) {
        delete intermediary_.broker_;
      }
      break;
    }
    case kBank: {
      if (GetArena() == nullptr) {
        delete intermediary_.bank_;
      }
      break;
    }
    case kMutualFundManager: {
      if (GetArena() == nullptr) {
        delete intermediary_.mutualfundmanager_;
      }
      break;
    }
    case INTERMEDIARY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INTERMEDIARY_NOT_SET;
}


void Intermediary_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.Intermediary_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_intermediary();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Intermediary_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.example.Intermediary_Proto.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.example.Intermediary_Proto.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.example.Broker_Proto broker = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_broker(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.example.Bank_Proto bank = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bank(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.example.MutualFundManager_Proto mutualFundManager = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_mutualfundmanager(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Intermediary_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.Intermediary_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.example.Intermediary_Proto.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.example.Intermediary_Proto.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .com.example.Broker_Proto broker = 3;
  if (_internal_has_broker()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::broker(this), target, stream);
  }

  // .com.example.Bank_Proto bank = 4;
  if (_internal_has_bank()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::bank(this), target, stream);
  }

  // .com.example.MutualFundManager_Proto mutualFundManager = 5;
  if (_internal_has_mutualfundmanager()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::mutualfundmanager(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.Intermediary_Proto)
  return target;
}

size_t Intermediary_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.Intermediary_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  switch (intermediary_case()) {
    // .com.example.Broker_Proto broker = 3;
    case kBroker: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *intermediary_.broker_);
      break;
    }
    // .com.example.Bank_Proto bank = 4;
    case kBank: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *intermediary_.bank_);
      break;
    }
    // .com.example.MutualFundManager_Proto mutualFundManager = 5;
    case kMutualFundManager: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *intermediary_.mutualfundmanager_);
      break;
    }
    case INTERMEDIARY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Intermediary_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.Intermediary_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Intermediary_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Intermediary_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.Intermediary_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.Intermediary_Proto)
    MergeFrom(*source);
  }
}

void Intermediary_Proto::MergeFrom(const Intermediary_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.Intermediary_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  switch (from.intermediary_case()) {
    case kBroker: {
      _internal_mutable_broker()->::com::example::Broker_Proto::MergeFrom(from._internal_broker());
      break;
    }
    case kBank: {
      _internal_mutable_bank()->::com::example::Bank_Proto::MergeFrom(from._internal_bank());
      break;
    }
    case kMutualFundManager: {
      _internal_mutable_mutualfundmanager()->::com::example::MutualFundManager_Proto::MergeFrom(from._internal_mutualfundmanager());
      break;
    }
    case INTERMEDIARY_NOT_SET: {
      break;
    }
  }
}

void Intermediary_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.Intermediary_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intermediary_Proto::CopyFrom(const Intermediary_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.Intermediary_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intermediary_Proto::IsInitialized() const {
  return true;
}

void Intermediary_Proto::InternalSwap(Intermediary_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(intermediary_, other->intermediary_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Intermediary_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Broker_Proto::InitAsDefaultInstance() {
  ::com::example::_Broker_Proto_default_instance_._instance.get_mutable()->intermediary_ = const_cast< ::com::example::Intermediary_Proto*>(
      ::com::example::Intermediary_Proto::internal_default_instance());
}
class Broker_Proto::_Internal {
 public:
  static const ::com::example::Intermediary_Proto& intermediary(const Broker_Proto* msg);
};

const ::com::example::Intermediary_Proto&
Broker_Proto::_Internal::intermediary(const Broker_Proto* msg) {
  return *msg->intermediary_;
}
Broker_Proto::Broker_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.Broker_Proto)
}
Broker_Proto::Broker_Proto(const Broker_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_intermediary()) {
    intermediary_ = new ::com::example::Intermediary_Proto(*from.intermediary_);
  } else {
    intermediary_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.example.Broker_Proto)
}

void Broker_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  intermediary_ = nullptr;
}

Broker_Proto::~Broker_Proto() {
  // @@protoc_insertion_point(destructor:com.example.Broker_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Broker_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete intermediary_;
}

void Broker_Proto::ArenaDtor(void* object) {
  Broker_Proto* _this = reinterpret_cast< Broker_Proto* >(object);
  (void)_this;
}
void Broker_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Broker_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Broker_Proto& Broker_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void Broker_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.Broker_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && intermediary_ != nullptr) {
    delete intermediary_;
  }
  intermediary_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Broker_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.example.Intermediary_Proto intermediary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_intermediary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Broker_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.Broker_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.example.Intermediary_Proto intermediary = 1;
  if (this->has_intermediary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::intermediary(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.Broker_Proto)
  return target;
}

size_t Broker_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.Broker_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.example.Intermediary_Proto intermediary = 1;
  if (this->has_intermediary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *intermediary_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Broker_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.Broker_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Broker_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Broker_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.Broker_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.Broker_Proto)
    MergeFrom(*source);
  }
}

void Broker_Proto::MergeFrom(const Broker_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.Broker_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_intermediary()) {
    _internal_mutable_intermediary()->::com::example::Intermediary_Proto::MergeFrom(from._internal_intermediary());
  }
}

void Broker_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.Broker_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Broker_Proto::CopyFrom(const Broker_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.Broker_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Broker_Proto::IsInitialized() const {
  return true;
}

void Broker_Proto::InternalSwap(Broker_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(intermediary_, other->intermediary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Broker_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Bank_Proto::InitAsDefaultInstance() {
  ::com::example::_Bank_Proto_default_instance_._instance.get_mutable()->intermediary_ = const_cast< ::com::example::Intermediary_Proto*>(
      ::com::example::Intermediary_Proto::internal_default_instance());
}
class Bank_Proto::_Internal {
 public:
  static const ::com::example::Intermediary_Proto& intermediary(const Bank_Proto* msg);
};

const ::com::example::Intermediary_Proto&
Bank_Proto::_Internal::intermediary(const Bank_Proto* msg) {
  return *msg->intermediary_;
}
Bank_Proto::Bank_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.Bank_Proto)
}
Bank_Proto::Bank_Proto(const Bank_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_intermediary()) {
    intermediary_ = new ::com::example::Intermediary_Proto(*from.intermediary_);
  } else {
    intermediary_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.example.Bank_Proto)
}

void Bank_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  intermediary_ = nullptr;
}

Bank_Proto::~Bank_Proto() {
  // @@protoc_insertion_point(destructor:com.example.Bank_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Bank_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete intermediary_;
}

void Bank_Proto::ArenaDtor(void* object) {
  Bank_Proto* _this = reinterpret_cast< Bank_Proto* >(object);
  (void)_this;
}
void Bank_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Bank_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Bank_Proto& Bank_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void Bank_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.Bank_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && intermediary_ != nullptr) {
    delete intermediary_;
  }
  intermediary_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Bank_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.example.Intermediary_Proto intermediary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_intermediary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Bank_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.Bank_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.example.Intermediary_Proto intermediary = 1;
  if (this->has_intermediary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::intermediary(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.Bank_Proto)
  return target;
}

size_t Bank_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.Bank_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.example.Intermediary_Proto intermediary = 1;
  if (this->has_intermediary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *intermediary_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bank_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.Bank_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Bank_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Bank_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.Bank_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.Bank_Proto)
    MergeFrom(*source);
  }
}

void Bank_Proto::MergeFrom(const Bank_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.Bank_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_intermediary()) {
    _internal_mutable_intermediary()->::com::example::Intermediary_Proto::MergeFrom(from._internal_intermediary());
  }
}

void Bank_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.Bank_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bank_Proto::CopyFrom(const Bank_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.Bank_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bank_Proto::IsInitialized() const {
  return true;
}

void Bank_Proto::InternalSwap(Bank_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(intermediary_, other->intermediary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Bank_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MutualFundManager_Proto::InitAsDefaultInstance() {
  ::com::example::_MutualFundManager_Proto_default_instance_._instance.get_mutable()->intermediary_ = const_cast< ::com::example::Intermediary_Proto*>(
      ::com::example::Intermediary_Proto::internal_default_instance());
}
class MutualFundManager_Proto::_Internal {
 public:
  static const ::com::example::Intermediary_Proto& intermediary(const MutualFundManager_Proto* msg);
};

const ::com::example::Intermediary_Proto&
MutualFundManager_Proto::_Internal::intermediary(const MutualFundManager_Proto* msg) {
  return *msg->intermediary_;
}
MutualFundManager_Proto::MutualFundManager_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.MutualFundManager_Proto)
}
MutualFundManager_Proto::MutualFundManager_Proto(const MutualFundManager_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_intermediary()) {
    intermediary_ = new ::com::example::Intermediary_Proto(*from.intermediary_);
  } else {
    intermediary_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.example.MutualFundManager_Proto)
}

void MutualFundManager_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  intermediary_ = nullptr;
}

MutualFundManager_Proto::~MutualFundManager_Proto() {
  // @@protoc_insertion_point(destructor:com.example.MutualFundManager_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MutualFundManager_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete intermediary_;
}

void MutualFundManager_Proto::ArenaDtor(void* object) {
  MutualFundManager_Proto* _this = reinterpret_cast< MutualFundManager_Proto* >(object);
  (void)_this;
}
void MutualFundManager_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MutualFundManager_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MutualFundManager_Proto& MutualFundManager_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Bank_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void MutualFundManager_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.MutualFundManager_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && intermediary_ != nullptr) {
    delete intermediary_;
  }
  intermediary_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MutualFundManager_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.example.Intermediary_Proto intermediary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_intermediary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MutualFundManager_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.MutualFundManager_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.example.Intermediary_Proto intermediary = 1;
  if (this->has_intermediary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::intermediary(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.MutualFundManager_Proto)
  return target;
}

size_t MutualFundManager_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.MutualFundManager_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.example.Intermediary_Proto intermediary = 1;
  if (this->has_intermediary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *intermediary_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MutualFundManager_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.MutualFundManager_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const MutualFundManager_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MutualFundManager_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.MutualFundManager_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.MutualFundManager_Proto)
    MergeFrom(*source);
  }
}

void MutualFundManager_Proto::MergeFrom(const MutualFundManager_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.MutualFundManager_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_intermediary()) {
    _internal_mutable_intermediary()->::com::example::Intermediary_Proto::MergeFrom(from._internal_intermediary());
  }
}

void MutualFundManager_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.MutualFundManager_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutualFundManager_Proto::CopyFrom(const MutualFundManager_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.MutualFundManager_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutualFundManager_Proto::IsInitialized() const {
  return true;
}

void MutualFundManager_Proto::InternalSwap(MutualFundManager_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(intermediary_, other->intermediary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MutualFundManager_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Snapshot_Proto::InitAsDefaultInstance() {
}
class Snapshot_Proto::_Internal {
 public:
};

Snapshot_Proto::Snapshot_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.Snapshot_Proto)
}
Snapshot_Proto::Snapshot_Proto(const Snapshot_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  assetname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_assetname().empty()) {
    assetname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_assetname(),
      GetArena());
  }
  timestamp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_timestamp().empty()) {
    timestamp_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_timestamp(),
      GetArena());
  }
  assetvalue_ = from.assetvalue_;
  // @@protoc_insertion_point(copy_constructor:com.example.Snapshot_Proto)
}

void Snapshot_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Snapshot_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  assetname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  assetvalue_ = 0;
}

Snapshot_Proto::~Snapshot_Proto() {
  // @@protoc_insertion_point(destructor:com.example.Snapshot_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Snapshot_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  assetname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Snapshot_Proto::ArenaDtor(void* object) {
  Snapshot_Proto* _this = reinterpret_cast< Snapshot_Proto* >(object);
  (void)_this;
}
void Snapshot_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Snapshot_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Snapshot_Proto& Snapshot_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Snapshot_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void Snapshot_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.Snapshot_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assetname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  assetvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Snapshot_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string assetName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_assetname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.example.Snapshot_Proto.assetName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float assetValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          assetvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_timestamp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.example.Snapshot_Proto.timestamp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Snapshot_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.Snapshot_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string assetName = 1;
  if (this->assetname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assetname().data(), static_cast<int>(this->_internal_assetname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.example.Snapshot_Proto.assetName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_assetname(), target);
  }

  // float assetValue = 2;
  if (!(this->assetvalue() <= 0 && this->assetvalue() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_assetvalue(), target);
  }

  // string timestamp = 3;
  if (this->timestamp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timestamp().data(), static_cast<int>(this->_internal_timestamp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.example.Snapshot_Proto.timestamp");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.Snapshot_Proto)
  return target;
}

size_t Snapshot_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.Snapshot_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assetName = 1;
  if (this->assetname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assetname());
  }

  // string timestamp = 3;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timestamp());
  }

  // float assetValue = 2;
  if (!(this->assetvalue() <= 0 && this->assetvalue() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Snapshot_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.Snapshot_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Snapshot_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Snapshot_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.Snapshot_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.Snapshot_Proto)
    MergeFrom(*source);
  }
}

void Snapshot_Proto::MergeFrom(const Snapshot_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.Snapshot_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.assetname().size() > 0) {
    _internal_set_assetname(from._internal_assetname());
  }
  if (from.timestamp().size() > 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (!(from.assetvalue() <= 0 && from.assetvalue() >= 0)) {
    _internal_set_assetvalue(from._internal_assetvalue());
  }
}

void Snapshot_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.Snapshot_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Snapshot_Proto::CopyFrom(const Snapshot_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.Snapshot_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Snapshot_Proto::IsInitialized() const {
  return true;
}

void Snapshot_Proto::InternalSwap(Snapshot_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  assetname_.Swap(&other->assetname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_.Swap(&other->timestamp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(assetvalue_, other->assetvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Snapshot_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Portfolio_Proto::InitAsDefaultInstance() {
}
class Portfolio_Proto::_Internal {
 public:
};

Portfolio_Proto::Portfolio_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  assets_(arena),
  intermediaries_(arena),
  snapshots_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.example.Portfolio_Proto)
}
Portfolio_Proto::Portfolio_Proto(const Portfolio_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      assets_(from.assets_),
      intermediaries_(from.intermediaries_),
      snapshots_(from.snapshots_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.example.Portfolio_Proto)
}

void Portfolio_Proto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Portfolio_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
}

Portfolio_Proto::~Portfolio_Proto() {
  // @@protoc_insertion_point(destructor:com.example.Portfolio_Proto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Portfolio_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Portfolio_Proto::ArenaDtor(void* object) {
  Portfolio_Proto* _this = reinterpret_cast< Portfolio_Proto* >(object);
  (void)_this;
}
void Portfolio_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Portfolio_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Portfolio_Proto& Portfolio_Proto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Portfolio_Proto_demo_2fsrc_2fmain_2fproto_2ffinancial_5fportfolio_2eproto.base);
  return *internal_default_instance();
}


void Portfolio_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.Portfolio_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assets_.Clear();
  intermediaries_.Clear();
  snapshots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Portfolio_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.example.Asset_Proto assets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_assets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .com.example.Intermediary_Proto intermediaries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_intermediaries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .com.example.Snapshot_Proto snapshots = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_snapshots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Portfolio_Proto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.example.Portfolio_Proto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.example.Asset_Proto assets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_assets_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_assets(i), target, stream);
  }

  // repeated .com.example.Intermediary_Proto intermediaries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_intermediaries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_intermediaries(i), target, stream);
  }

  // repeated .com.example.Snapshot_Proto snapshots = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_snapshots_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_snapshots(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.Portfolio_Proto)
  return target;
}

size_t Portfolio_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.Portfolio_Proto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.example.Asset_Proto assets = 1;
  total_size += 1UL * this->_internal_assets_size();
  for (const auto& msg : this->assets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.example.Intermediary_Proto intermediaries = 2;
  total_size += 1UL * this->_internal_intermediaries_size();
  for (const auto& msg : this->intermediaries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.example.Snapshot_Proto snapshots = 3;
  total_size += 1UL * this->_internal_snapshots_size();
  for (const auto& msg : this->snapshots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Portfolio_Proto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.Portfolio_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Portfolio_Proto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Portfolio_Proto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.Portfolio_Proto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.Portfolio_Proto)
    MergeFrom(*source);
  }
}

void Portfolio_Proto::MergeFrom(const Portfolio_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.Portfolio_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assets_.MergeFrom(from.assets_);
  intermediaries_.MergeFrom(from.intermediaries_);
  snapshots_.MergeFrom(from.snapshots_);
}

void Portfolio_Proto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.Portfolio_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Portfolio_Proto::CopyFrom(const Portfolio_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.Portfolio_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Portfolio_Proto::IsInitialized() const {
  return true;
}

void Portfolio_Proto::InternalSwap(Portfolio_Proto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  assets_.InternalSwap(&other->assets_);
  intermediaries_.InternalSwap(&other->intermediaries_);
  snapshots_.InternalSwap(&other->snapshots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Portfolio_Proto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace example
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::example::Asset_Proto* Arena::CreateMaybeMessage< ::com::example::Asset_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::Asset_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::BaseAsset_Proto* Arena::CreateMaybeMessage< ::com::example::BaseAsset_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::BaseAsset_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::Stock_Proto* Arena::CreateMaybeMessage< ::com::example::Stock_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::Stock_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::Bond_Proto* Arena::CreateMaybeMessage< ::com::example::Bond_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::Bond_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::MutualFund_Proto* Arena::CreateMaybeMessage< ::com::example::MutualFund_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::MutualFund_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::Intermediary_Proto* Arena::CreateMaybeMessage< ::com::example::Intermediary_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::Intermediary_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::Broker_Proto* Arena::CreateMaybeMessage< ::com::example::Broker_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::Broker_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::Bank_Proto* Arena::CreateMaybeMessage< ::com::example::Bank_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::Bank_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::MutualFundManager_Proto* Arena::CreateMaybeMessage< ::com::example::MutualFundManager_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::MutualFundManager_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::Snapshot_Proto* Arena::CreateMaybeMessage< ::com::example::Snapshot_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::Snapshot_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::example::Portfolio_Proto* Arena::CreateMaybeMessage< ::com::example::Portfolio_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::example::Portfolio_Proto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
